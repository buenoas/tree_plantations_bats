### ESTE CODIGO PRODUZ AS CURVAS DE RAREFACAO DE MORCEGOS ###

# CARREGA OS PACOTES
library(iNEXT)
library(ggplot2)
library(rphylopic)
library(gridExtra)


# PRODUZ OS DADOS A PARTIR DA TABELA DO TCC DO LEONARDO
species = c("Sturnira lilium",
            "Desmodus rotundus",
            "Chrotopterus auritus",
            "Myotis spp.",
            "Lasiurus blossevillii",
            "Eptesicus brasiliensis")

natural_forest = c(12, 0, 0, 3, 0, 3)
araucaria_plantation = c(36, 10, 0, 5, 1, 0)
pine_plantation = c(22, 21, 1, 1, 2, 0)

df = data.frame(natural_forest,
                araucaria_plantation,
                pine_plantation)

rownames(df) = species


# PRODUZ AS CURVAS DE RAREFACAO
x = iNEXT(df,
          q = 0,
          datatype = "abundance",
          size = NULL,
          endpoint = NULL,
          knots = max(colSums(df)) * 2,
          se = TRUE,
          conf = 0.95,
          nboot = 1000)


# VISUALIZA UM GRAFICO SIMPLES
ggiNEXT(x)


# ORGANIZA OS DADOS PARA PRODUZIR O GRAFICO ELABORADO
y = x$iNextEst$size_based

z = y[-which(y$Assemblage != "natural_forest" &
               y$Method == "Extrapolation"), ]

z$Assemblage = factor(z$Assemblage,
                      levels = unique(z$Assemblage))


# OBTEM A IMAGEM DE UM MORCEGO
uuid <- get_uuid(name = "Desmodus rotundus", n = 2)
img <- get_phylopic(uuid = uuid[2])


# PRODUZ O GRAFICO ELABORADO
p = 
  
  ggplot(data = z, aes(x = m, y = qD, colour = Assemblage)) + 
  
  # Adiciona a imagem do morcego
  add_phylopic(img = img, color = "grey50",
               x = 7.5, y = 5.5, ysize = 8) +
  
  geom_segment(x = 18 * 2, y = 0,
               xend = 18 * 2, yend = max(subset(z, m == 18 * 2)$qD),
               colour = "grey50", linetype = "dashed", size = 1/3) +
  geom_line(linetype = "dashed", size = 1) + 
  geom_line(data = subset(z, Method != "Extrapolation"),
            linetype = "solid", size = 1) +
  geom_point(data = subset(z, m == 18 * 2), size = 3) +
  
  labs(x = "Number of individuals captured",
       y = "Number of bat species",
       colour = NULL,
       title = "Projeto FLORESTAS | Morcegos") +
  
  scale_x_continuous(limits = c(0.99, NA),
                     breaks = c(1, 10, 20, 30, 36, 40, 50, 55, 58, 61),
                     labels = c("1", "10", "20", "30", "36", "40", "52",
                                "36", "36", "36")) +
  scale_y_continuous(limits = c(0.99,
                                max(subset(z, m == 18 * 2)$qD.UCL)),
                     breaks = seq(1, 6, 1)) +
  scale_colour_manual(values = c("#2DBF81", "#812DBF", "#BF812D"),
                      labels = c("Natural Forest",
                                 "Araucaria Plantation",
                                 "Pine Plantation")) +
  
  annotate("text", x = 37, y = 1,
           label = "Standardized\nsampling effort",
           size = 3, vjust = 0.3, hjust = 0, colour = "grey50") +
  
  theme_classic(base_size = 12) +
  theme(legend.position = "top",
        axis.line = element_line(colour = "black", size = 1/3),
        axis.ticks = element_line(colour = "black", size = 1/3),
        axis.text = element_text(colour = "black"),
        axis.title = element_text(colour = "black"),
        plot.margin = unit(c(5.5, 0, 5.5, 5.5), "pt"))

p


g = 
  
  ggplot(data = subset(z, m == 18 * 2),
         aes(x = Assemblage, y = qD, colour = Assemblage)) + 
  
  geom_point(size = 3) +
  geom_errorbar(aes(x = Assemblage,
                    ymin = qD.LCL,
                    ymax = qD.UCL,
                    colour = Assemblage),
                width = 0.3) +
  
  labs(x = "",
       y = "",
       colour = NULL,
       title = "") +
  
  scale_x_discrete(labels = c("36", "36", "36")) +
  scale_y_continuous(limits = c(0.99,
                                max(subset(z, m == 18 * 2)$qD.UCL)),
                     breaks = seq(1, 6, 1)) +
  scale_colour_manual(values = c("#2DBF81", "#812DBF", "#BF812D"),
                      labels = c("", "", "")) +
  
  theme_classic(base_size = 12) +
  theme(legend.position = "top",
        axis.line.x = element_line(colour = "black", size = 1/3),
        axis.line.y = element_line(colour = "white"),
        axis.ticks.x = element_line(colour = "black", size = 1/3),
        axis.ticks.y = element_line(colour = "white"),
        axis.text.x = element_text(colour = "black"),
        axis.text.y = element_text(colour = "white"),
        axis.title = element_text(colour = "black"),
        plot.margin = unit(c(5.5, 5.5, 5.5, 0), "pt")) +
  guides(color = guide_legend(override.aes = list(colour = "white")))

g

ggsave(grid.arrange(p, g, widths = c(4, 1), ncol = 2),
       filename = "bats_grid.jpg", dpi = 600,
       w = 16, h = 14, units = "cm")
